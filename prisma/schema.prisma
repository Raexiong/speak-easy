
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id
  clerkId       String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  library       Book[]
  vocabularies  Vocabulary[]
}

model Book {
  id          String    @id @default(cuid())
  title       String
  author      String?
  filePath    String
  fileType    String    // "EPUB" or "PDF"
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  vocabulary  Vocabulary[]
}

model Vocabulary {
  id            String    @id @default(cuid())
  word          String
  origin        String?
  phonetic      String?
  pronunciation String?   // URL to audio file or API endpoint
  definitions   Definition[]
  examples      Example[]
  collocations  String[]
  createdAt     DateTime  @default(now())
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  book          Book      @relation(fields: [bookId], references: [id])
  bookId        String
}

model Definition {
  id            String    @id @default(cuid())
  english       String
  chinese       String
  vocabulary    Vocabulary @relation(fields: [vocabularyId], references: [id], onDelete: Cascade)
  vocabularyId  String
}

model Example {
  id            String    @id @default(cuid())
  english       String
  chinese       String
  vocabulary    Vocabulary @relation(fields: [vocabularyId], references: [id], onDelete: Cascade)
  vocabularyId  String
}